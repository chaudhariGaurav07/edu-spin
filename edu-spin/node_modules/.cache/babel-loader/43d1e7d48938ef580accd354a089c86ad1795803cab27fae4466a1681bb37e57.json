{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // Ensure this matches your backend\n\nconst Game = () => {\n  _s();\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [spinKey, setSpinKey] = useState(0); // Key for forcing re-render\n  const [score, setScore] = useState(0); // Track player score\n\n  useEffect(() => {\n    // Retrieve stored user details from localStorage\n    const storedName = localStorage.getItem(\"name\");\n    const storedEmail = localStorage.getItem(\"email\");\n    if (!storedName || !storedEmail) {\n      console.error(\"User not logged in. Score submission will fail.\");\n    }\n  }, []);\n  const handleSpinResult = question => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null);\n    setFeedback(\"\");\n    setSpinKey(prevKey => prevKey + 1); // Change key to force re-render\n  };\n  const handleAnswerClick = answer => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n      const newScore = score + 10; // Increase score by 10\n      setScore(newScore); // Update score state\n\n      // Submit updated score to the backend\n      submitScore(newScore);\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n\n  // Submit score to the server\n  const submitScore = newScore => {\n    const playerName = localStorage.getItem(\"name\");\n    const playerEmail = localStorage.getItem(\"email\");\n    if (!playerName || !playerEmail) {\n      console.error(\"User details missing, cannot submit score.\");\n      return;\n    }\n    const playerData = {\n      name: playerName,\n      email: playerEmail,\n      score: newScore\n    };\n    console.log(\"Submitting score:\", playerData);\n    socket.emit(\"submit-score\", playerData); // Emit score to backend\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Spin & Learn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score-display\",\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-wheel-container\",\n        children: [/*#__PURE__*/_jsxDEV(SpinWheel, {\n          onSpin: handleSpinResult\n        }, spinKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: showQuestion && currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: userAnswer === option ? \"selected\" : \"\",\n              onClick: () => handleAnswerClick(option),\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`,\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"8T9KbEgunJZ/NGSjq0VRNsO8/64=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","io","SpinWheel","jsxDEV","_jsxDEV","socket","Game","_s","showQuestion","setShowQuestion","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","feedback","setFeedback","spinKey","setSpinKey","score","setScore","storedName","localStorage","getItem","storedEmail","console","error","handleSpinResult","question","prevKey","handleAnswerClick","answer","correctAnswer","newScore","submitScore","playerName","playerEmail","playerData","name","email","log","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSpin","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\n\nconst socket = io(\"http://localhost:5000\"); // Ensure this matches your backend\n\nconst Game = () => {\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\"); \n  const [spinKey, setSpinKey] = useState(0); // Key for forcing re-render\n  const [score, setScore] = useState(0); // Track player score\n\n  useEffect(() => {\n    // Retrieve stored user details from localStorage\n    const storedName = localStorage.getItem(\"name\");\n    const storedEmail = localStorage.getItem(\"email\");\n\n    if (!storedName || !storedEmail) {\n      console.error(\"User not logged in. Score submission will fail.\");\n    }\n  }, []);\n\n  const handleSpinResult = (question) => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null); \n    setFeedback(\"\"); \n    setSpinKey((prevKey) => prevKey + 1); // Change key to force re-render\n  };\n\n  const handleAnswerClick = (answer) => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n      const newScore = score + 10; // Increase score by 10\n      setScore(newScore); // Update score state\n  \n      // Submit updated score to the backend\n      submitScore(newScore);\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n  \n  // Submit score to the server\n  const submitScore = (newScore) => {\n    const playerName = localStorage.getItem(\"name\");\n    const playerEmail = localStorage.getItem(\"email\");\n  \n    if (!playerName || !playerEmail) {\n      console.error(\"User details missing, cannot submit score.\");\n      return;\n    }\n  \n    const playerData = {\n      name: playerName,\n      email: playerEmail,\n      score: newScore,\n    };\n  \n    console.log(\"Submitting score:\", playerData);\n    socket.emit(\"submit-score\", playerData); // Emit score to backend\n  };\n  \n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"game-title\">Spin & Learn</h1>\n      <p className=\"score-display\">Your Score: {score}</p>\n      <div className=\"game-content\">\n        <div className=\"spin-wheel-container\">\n          <SpinWheel key={spinKey} onSpin={handleSpinResult} /> {/* Force re-render */}\n        </div>\n        <div className=\"question-container\">\n          {showQuestion && currentQuestion && (\n            <div className=\"question-box\">\n              <h2>{currentQuestion.question}</h2>\n              <ul>\n                {currentQuestion.options.map((option, index) => (\n                  <li\n                    key={index}\n                    className={userAnswer === option ? \"selected\" : \"\"}\n                    onClick={() => handleAnswerClick(option)}\n                  >\n                    {option}\n                  </li>\n                ))}\n              </ul>\n              <div className={`feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`}>\n                {feedback}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}