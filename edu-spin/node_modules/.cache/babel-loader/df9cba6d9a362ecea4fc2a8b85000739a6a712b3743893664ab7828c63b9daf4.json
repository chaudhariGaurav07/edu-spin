{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/MathPlayground.js\",\n  _s = $RefreshSig$();\n// src/pages/MathPlayground.js\nimport React, { useState } from \"react\";\nimport \"./MathPlayground.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateRandomNumber = max => Math.floor(Math.random() * max) + 1;\nconst MathPlayground = () => {\n  _s();\n  const [num1, setNum1] = useState(generateRandomNumber(10));\n  const [num2, setNum2] = useState(generateRandomNumber(10));\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const checkAnswer = () => {\n    if (parseInt(userAnswer) === num1 + num2) {\n      setFeedback(\"🎉 Correct! Well done!\");\n    } else {\n      setFeedback(\"❌ Oops! Try again.\");\n    }\n  };\n  const generateNewQuestion = () => {\n    setNum1(generateRandomNumber(10));\n    setNum2(generateRandomNumber(10));\n    setUserAnswer(\"\");\n    setFeedback(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"math-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Math Playground\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Solve the problem below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [num1, \" + \", num2, \" = ?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: userAnswer,\n      onChange: e => setUserAnswer(e.target.value),\n      placeholder: \"Your Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateNewQuestion,\n        children: \"New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(MathPlayground, \"BwoGnlqhnPntaK0bLbITsZjcxbs=\");\n_c = MathPlayground;\nexport default MathPlayground;\nvar _c;\n$RefreshReg$(_c, \"MathPlayground\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","generateRandomNumber","max","Math","floor","random","MathPlayground","_s","num1","setNum1","num2","setNum2","userAnswer","setUserAnswer","feedback","setFeedback","checkAnswer","parseInt","generateNewQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/MathPlayground.js"],"sourcesContent":["// src/pages/MathPlayground.js\nimport React, { useState } from \"react\";\nimport \"./MathPlayground.css\";\n\nconst generateRandomNumber = (max) => Math.floor(Math.random() * max) + 1;\n\nconst MathPlayground = () => {\n  const [num1, setNum1] = useState(generateRandomNumber(10));\n  const [num2, setNum2] = useState(generateRandomNumber(10));\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n\n  const checkAnswer = () => {\n    if (parseInt(userAnswer) === num1 + num2) {\n      setFeedback(\"🎉 Correct! Well done!\");\n    } else {\n      setFeedback(\"❌ Oops! Try again.\");\n    }\n  };\n\n  const generateNewQuestion = () => {\n    setNum1(generateRandomNumber(10));\n    setNum2(generateRandomNumber(10));\n    setUserAnswer(\"\");\n    setFeedback(\"\");\n  };\n\n  return (\n    <div className=\"math-container\">\n      <h1>Math Playground</h1>\n      <p>Solve the problem below:</p>\n      <h2>{num1} + {num2} = ?</h2>\n      <input\n        type=\"number\"\n        value={userAnswer}\n        onChange={(e) => setUserAnswer(e.target.value)}\n        placeholder=\"Your Answer\"\n      />\n      <div className=\"buttons\">\n        <button onClick={checkAnswer}>Check Answer</button>\n        <button onClick={generateNewQuestion}>New Question</button>\n      </div>\n      <p className=\"feedback\">{feedback}</p>\n    </div>\n  );\n};\n\nexport default MathPlayground;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}