{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../styles/Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/students\");\n      const students = await response.json();\n      const user = students.find(student => student.email === credentials.email);\n      if (user) {\n        localStorage.setItem(\"loggedIn\", \"true\");\n        localStorage.setItem(\"name\", user.name);\n        localStorage.setItem(\"email\", user.email);\n        navigate(\"/\");\n      } else {\n        alert(\"Invalid credentials\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Error logging in. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: credentials.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: credentials.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"tON92gC6g17sNH8ocikzOdvEg9E=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","students","json","user","find","student","localStorage","setItem","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","href","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../styles/Auth.css\";\n\nconst Login = () => {\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    try {\n      const response = await fetch(\"http://localhost:5000/students\");\n      const students = await response.json();\n  \n      const user = students.find(student => student.email === credentials.email);\n      \n      if (user) {\n        localStorage.setItem(\"loggedIn\", \"true\");\n        localStorage.setItem(\"name\", user.name);\n        localStorage.setItem(\"email\", user.email);\n        navigate(\"/\");\n      } else {\n        alert(\"Invalid credentials\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Error logging in. Please try again.\");\n    }\n  };\n  \n  return (\n    <div className=\"auth-container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" value={credentials.email} onChange={handleChange} required />\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" value={credentials.password} onChange={handleChange} required />\n        <button type=\"submit\">Login</button>\n      </form>\n      <p>Don't have an account? <a href=\"/register\">Register</a></p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}