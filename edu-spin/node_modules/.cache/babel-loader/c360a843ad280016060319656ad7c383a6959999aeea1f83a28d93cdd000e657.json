{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\"); // For feedback message\n\n  const handleSpinResult = question => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null); // Reset user answer when a new question is shown\n    setFeedback(\"\"); // Reset feedback message\n  };\n  const handleAnswerClick = answer => {\n    setUserAnswer(answer); // Set the user's answer\n    // Check if the answer is correct\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spin & Learn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpinWheel, {\n      onSpin: handleSpinResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), showQuestion && currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: userAnswer === option ? \"selected\" : \"\",\n          onClick: () => handleAnswerClick(option),\n          style: {\n            cursor: \"pointer\",\n            marginBottom: \"10px\"\n          },\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"zwMWJoKUhoA0kYcDYjYC7oSNJuY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","SpinWheel","jsxDEV","_jsxDEV","Game","_s","showQuestion","setShowQuestion","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","feedback","setFeedback","handleSpinResult","question","handleAnswerClick","answer","correctAnswer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSpin","options","map","option","index","onClick","style","cursor","marginBottom","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\n\nconst Game = () => {\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\"); // For feedback message\n\n  const handleSpinResult = (question) => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null); // Reset user answer when a new question is shown\n    setFeedback(\"\"); // Reset feedback message\n  };\n\n  const handleAnswerClick = (answer) => {\n    setUserAnswer(answer); // Set the user's answer\n    // Check if the answer is correct\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>Spin & Learn</h1>\n      <SpinWheel onSpin={handleSpinResult} />\n      \n      {showQuestion && currentQuestion && (\n        <div className=\"question-box\">\n          <h2>{currentQuestion.question}</h2>\n          <ul>\n            {currentQuestion.options.map((option, index) => (\n              <li\n                key={index}\n                className={userAnswer === option ? \"selected\" : \"\"}\n                onClick={() => handleAnswerClick(option)}\n                style={{ cursor: \"pointer\", marginBottom: \"10px\" }}\n              >\n                {option}\n              </li>\n            ))}\n          </ul>\n          <div className=\"feedback\">{feedback}</div> {/* Display feedback */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAC7B,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMc,gBAAgB,GAAIC,QAAQ,IAAK;IACrCN,kBAAkB,CAACM,QAAQ,CAAC;IAC5BR,eAAe,CAAC,IAAI,CAAC;IACrBI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMG,iBAAiB,GAAIC,MAAM,IAAK;IACpCN,aAAa,CAACM,MAAM,CAAC,CAAC,CAAC;IACvB;IACA,IAAIA,MAAM,KAAKT,eAAe,CAACU,aAAa,EAAE;MAC5CL,WAAW,CAAC,aAAa,CAAC;IAC5B,CAAC,MAAM;MACLA,WAAW,CAAC,6BAA6B,CAAC;IAC5C;EACF,CAAC;EAED,oBACEV,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA,CAACF,SAAS;MAACwB,MAAM,EAAEX;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEtClB,YAAY,IAAIE,eAAe,iBAC9BL,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,EAAKZ,eAAe,CAACO;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnCrB,OAAA;QAAAiB,QAAA,EACGZ,eAAe,CAACkB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzC1B,OAAA;UAEEgB,SAAS,EAAET,UAAU,KAAKkB,MAAM,GAAG,UAAU,GAAG,EAAG;UACnDE,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACY,MAAM,CAAE;UACzCG,KAAK,EAAE;YAAEC,MAAM,EAAE,SAAS;YAAEC,YAAY,EAAE;UAAO,CAAE;UAAAb,QAAA,EAElDQ;QAAM,GALFC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLrB,OAAA;QAAKgB,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAER;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAhDID,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAkDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}