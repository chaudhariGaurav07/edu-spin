{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/PuzzleMatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../styles/PuzzleMatch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [{\n  id: 1,\n  src: \"/images/apple.png\",\n  name: \"Apple\",\n  type: \"image\"\n}, {\n  id: 2,\n  name: \"Apple\",\n  type: \"text\"\n}, {\n  id: 3,\n  src: \"/images/banana.png\",\n  name: \"Banana\",\n  type: \"image\"\n}, {\n  id: 4,\n  name: \"Banana\",\n  type: \"text\"\n}, {\n  id: 5,\n  src: \"/images/car.png\",\n  name: \"Car\",\n  type: \"image\"\n}, {\n  id: 6,\n  name: \"Car\",\n  type: \"text\"\n}, {\n  id: 7,\n  src: \"/images/dog.png\",\n  name: \"Dog\",\n  type: \"image\"\n}, {\n  id: 8,\n  name: \"Dog\",\n  type: \"text\"\n}];\nconst PuzzleMatch = () => {\n  _s();\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [selectedPair, setSelectedPair] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [isChecking, setIsChecking] = useState(false);\n  useEffect(() => {\n    setShuffledImages([...images].sort(() => Math.random() - 0.5));\n  }, []);\n  const handleSelection = item => {\n    if (isChecking || selectedPair.some(selected => selected.id === item.id)) return;\n    const newSelection = [...selectedPair, item];\n    if (newSelection.length === 2) {\n      setIsChecking(true);\n      setTimeout(() => {\n        if (newSelection[0].name === newSelection[1].name && newSelection[0].type !== newSelection[1].type) {\n          setMatchedPairs(prev => [...prev, newSelection[0].name]);\n        }\n        setSelectedPair([]);\n        setIsChecking(false);\n      }, 1000);\n    } else {\n      setSelectedPair(newSelection);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"puzzle-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Match the Pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Find the matching image and name!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-grid\",\n      children: shuffledImages.map(item => {\n        const isFlipped = selectedPair.some(selected => selected.id === item.id) || matchedPairs.includes(item.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `puzzle-item ${isFlipped ? \"flipped\" : \"\"} ${matchedPairs.includes(item.name) ? \"matched\" : \"\"}`,\n          onClick: () => handleSelection(item),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"puzzle-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"puzzle-front\",\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"puzzle-back\",\n              children: item.type === \"image\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.src,\n                alt: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 44\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 85\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleMatch, \"GGawSC3pskqmoyFNj8fT6p72g8Y=\");\n_c = PuzzleMatch;\nexport default PuzzleMatch;\nvar _c;\n$RefreshReg$(_c, \"PuzzleMatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","id","src","name","type","PuzzleMatch","_s","shuffledImages","setShuffledImages","selectedPair","setSelectedPair","matchedPairs","setMatchedPairs","isChecking","setIsChecking","sort","Math","random","handleSelection","item","some","selected","newSelection","length","setTimeout","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","isFlipped","includes","onClick","alt","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/PuzzleMatch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../styles/PuzzleMatch.css\";\n\nconst images = [\n  { id: 1, src: \"/images/apple.png\", name: \"Apple\", type: \"image\" },\n  { id: 2, name: \"Apple\", type: \"text\" },\n  { id: 3, src: \"/images/banana.png\", name: \"Banana\", type: \"image\" },\n  { id: 4, name: \"Banana\", type: \"text\" },\n  { id: 5, src: \"/images/car.png\", name: \"Car\", type: \"image\" },\n  { id: 6, name: \"Car\", type: \"text\" },\n  { id: 7, src: \"/images/dog.png\", name: \"Dog\", type: \"image\" },\n  { id: 8, name: \"Dog\", type: \"text\" },\n];\n\nconst PuzzleMatch = () => {\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [selectedPair, setSelectedPair] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [isChecking, setIsChecking] = useState(false);\n\n  useEffect(() => {\n    setShuffledImages([...images].sort(() => Math.random() - 0.5));\n  }, []);\n\n  const handleSelection = (item) => {\n    if (isChecking || selectedPair.some((selected) => selected.id === item.id)) return;\n\n    const newSelection = [...selectedPair, item];\n\n    if (newSelection.length === 2) {\n      setIsChecking(true);\n      setTimeout(() => {\n        if (newSelection[0].name === newSelection[1].name && newSelection[0].type !== newSelection[1].type) {\n          setMatchedPairs((prev) => [...prev, newSelection[0].name]);\n        }\n        setSelectedPair([]);\n        setIsChecking(false);\n      }, 1000);\n    } else {\n      setSelectedPair(newSelection);\n    }\n  };\n\n  return (\n    <div className=\"puzzle-container\">\n      <h1>Match the Pairs</h1>\n      <p>Find the matching image and name!</p>\n      <div className=\"puzzle-grid\">\n        {shuffledImages.map((item) => {\n          const isFlipped = selectedPair.some((selected) => selected.id === item.id) || matchedPairs.includes(item.name);\n\n          return (\n            <div\n              key={item.id}\n              className={`puzzle-item ${isFlipped ? \"flipped\" : \"\"} ${matchedPairs.includes(item.name) ? \"matched\" : \"\"}`}\n              onClick={() => handleSelection(item)}\n            >\n              <div className=\"puzzle-inner\">\n                <div className=\"puzzle-front\">?</div>\n                <div className=\"puzzle-back\">\n                  {item.type === \"image\" ? <img src={item.src} alt={item.name} /> : <span>{item.name}</span>}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PuzzleMatch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}