{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/PuzzleMatch.js\",\n  _s = $RefreshSig$();\n// src/pages/PuzzleMatch.js\nimport React, { useState } from \"react\";\nimport \"./../styles/PuzzleMatch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [{\n  id: 1,\n  src: \"/images/apple.png\",\n  name: \"Apple\"\n}, {\n  id: 2,\n  src: \"/images/banana.png\",\n  name: \"Banana\"\n}, {\n  id: 3,\n  src: \"/images/car.png\",\n  name: \"Car\"\n}, {\n  id: 4,\n  src: \"/images/dog.png\",\n  name: \"Dog\"\n}];\nconst PuzzleMatch = () => {\n  _s();\n  const [shuffledImages, setShuffledImages] = useState([...images].sort(() => Math.random() - 0.5));\n  const [selectedPair, setSelectedPair] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const handleSelection = item => {\n    if (selectedPair.length === 1 && selectedPair[0].id === item.id) return;\n    const newSelection = [...selectedPair, item];\n    if (newSelection.length === 2) {\n      if (newSelection[0].id === newSelection[1].id) {\n        setMatchedPairs([...matchedPairs, newSelection[0].id]);\n      }\n      setTimeout(() => setSelectedPair([]), 800);\n    } else {\n      setSelectedPair(newSelection);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"puzzle-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Match the Pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Find the matching image and name!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-grid\",\n      children: shuffledImages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `puzzle-item ${selectedPair.includes(item) || matchedPairs.includes(item.id) ? \"flipped\" : \"\"}`,\n        onClick: () => handleSelection(item),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-front\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.src,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-back\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleMatch, \"VuPPpRezJBg02aoZ4Tz4t0zSHpc=\");\n_c = PuzzleMatch;\nexport default PuzzleMatch;\nvar _c;\n$RefreshReg$(_c, \"PuzzleMatch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","images","id","src","name","PuzzleMatch","_s","shuffledImages","setShuffledImages","sort","Math","random","selectedPair","setSelectedPair","matchedPairs","setMatchedPairs","handleSelection","item","length","newSelection","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","includes","onClick","alt","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/PuzzleMatch.js"],"sourcesContent":["// src/pages/PuzzleMatch.js\nimport React, { useState } from \"react\";\nimport \"./../styles/PuzzleMatch.css\";\n\nconst images = [\n  { id: 1, src: \"/images/apple.png\", name: \"Apple\" },\n  { id: 2, src: \"/images/banana.png\", name: \"Banana\" },\n  { id:3, src: \"/images/car.png\", name: \"Car\" },\n  { id:4, src: \"/images/dog.png\", name: \"Dog\" }\n];\n\nconst PuzzleMatch = () => {\n  const [shuffledImages, setShuffledImages] = useState([...images].sort(() => Math.random() - 0.5));\n  const [selectedPair, setSelectedPair] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n\n  const handleSelection = (item) => {\n    if (selectedPair.length === 1 && selectedPair[0].id === item.id) return;\n\n    const newSelection = [...selectedPair, item];\n\n    if (newSelection.length === 2) {\n      if (newSelection[0].id === newSelection[1].id) {\n        setMatchedPairs([...matchedPairs, newSelection[0].id]);\n      }\n      setTimeout(() => setSelectedPair([]), 800);\n    } else {\n      setSelectedPair(newSelection);\n    }\n  };\n\n  return (\n    <div className=\"puzzle-container\">\n      <h1>Match the Pairs</h1>\n      <p>Find the matching image and name!</p>\n      <div className=\"puzzle-grid\">\n        {shuffledImages.map((item, index) => (\n          <div\n            key={index}\n            className={`puzzle-item ${\n              selectedPair.includes(item) || matchedPairs.includes(item.id) ? \"flipped\" : \"\"\n            }`}\n            onClick={() => handleSelection(item)}\n          >\n            <div className=\"puzzle-front\">\n              <img src={item.src} alt={item.name} />\n            </div>\n            <div className=\"puzzle-back\">\n              {item.name}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PuzzleMatch;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,mBAAmB;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAClD;EAAEF,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAS,CAAC,EACpD;EAAEF,EAAE,EAAC,CAAC;EAAEC,GAAG,EAAE,iBAAiB;EAAEC,IAAI,EAAE;AAAM,CAAC,EAC7C;EAAEF,EAAE,EAAC,CAAC;EAAEC,GAAG,EAAE,iBAAiB;EAAEC,IAAI,EAAE;AAAM,CAAC,CAC9C;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,GAAGG,MAAM,CAAC,CAACQ,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;EACjG,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMkB,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAIL,YAAY,CAACM,MAAM,KAAK,CAAC,IAAIN,YAAY,CAAC,CAAC,CAAC,CAACV,EAAE,KAAKe,IAAI,CAACf,EAAE,EAAE;IAEjE,MAAMiB,YAAY,GAAG,CAAC,GAAGP,YAAY,EAAEK,IAAI,CAAC;IAE5C,IAAIE,YAAY,CAACD,MAAM,KAAK,CAAC,EAAE;MAC7B,IAAIC,YAAY,CAAC,CAAC,CAAC,CAACjB,EAAE,KAAKiB,YAAY,CAAC,CAAC,CAAC,CAACjB,EAAE,EAAE;QAC7Ca,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEK,YAAY,CAAC,CAAC,CAAC,CAACjB,EAAE,CAAC,CAAC;MACxD;MACAkB,UAAU,CAAC,MAAMP,eAAe,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC5C,CAAC,MAAM;MACLA,eAAe,CAACM,YAAY,CAAC;IAC/B;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BtB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1B,OAAA;MAAAsB,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxC1B,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBf,cAAc,CAACoB,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBAC9B5B,OAAA;QAEEqB,SAAS,EAAE,eACTT,YAAY,CAACiB,QAAQ,CAACZ,IAAI,CAAC,IAAIH,YAAY,CAACe,QAAQ,CAACZ,IAAI,CAACf,EAAE,CAAC,GAAG,SAAS,GAAG,EAAE,EAC7E;QACH4B,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACC,IAAI,CAAE;QAAAK,QAAA,gBAErCtB,OAAA;UAAKqB,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BtB,OAAA;YAAKG,GAAG,EAAEc,IAAI,CAACd,GAAI;YAAC4B,GAAG,EAAEd,IAAI,CAACb;UAAK;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACN1B,OAAA;UAAKqB,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBL,IAAI,CAACb;QAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA,GAXDE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA5CID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}