{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/PuzzleMatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../styles/PuzzleMatch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [{\n  id: 1,\n  src: \"/images/apple.png\",\n  name: \"Apple\",\n  type: \"image\"\n}, {\n  id: 2,\n  name: \"Apple\",\n  type: \"text\"\n}, {\n  id: 3,\n  src: \"/images/banana.png\",\n  name: \"Banana\",\n  type: \"image\"\n}, {\n  id: 4,\n  name: \"Banana\",\n  type: \"text\"\n}, {\n  id: 5,\n  src: \"/images/car.png\",\n  name: \"Car\",\n  type: \"image\"\n}, {\n  id: 6,\n  name: \"Car\",\n  type: \"text\"\n}, {\n  id: 7,\n  src: \"/images/dog.png\",\n  name: \"Dog\",\n  type: \"image\"\n}, {\n  id: 8,\n  name: \"Dog\",\n  type: \"text\"\n}];\nconst PuzzleMatch = () => {\n  _s();\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [selectedPair, setSelectedPair] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [isChecking, setIsChecking] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    shuffleImages();\n  }, []);\n  const shuffleImages = () => {\n    const shuffled = [...images].sort(() => Math.random() - 0.5);\n    setShuffledImages(shuffled);\n  };\n  const handleSelection = item => {\n    if (isChecking || selectedPair.length === 2 || matchedPairs.includes(item.name)) {\n      return;\n    }\n    const newSelection = [...selectedPair, item];\n    setSelectedPair(newSelection);\n    if (newSelection.length === 2) {\n      setIsChecking(true);\n      setTimeout(() => {\n        const [item1, item2] = newSelection;\n        if (item1.name === item2.name && item1.type !== item2.type) {\n          setMatchedPairs(prev => [...prev, item1.name]);\n          setMessage(`✅ 1 match is correct: ${item1.name}!`);\n        }\n        setSelectedPair([]);\n        setIsChecking(false);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"puzzle-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Match the Pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Find the matching image and name!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"match-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-grid\",\n      children: shuffledImages.map(item => {\n        const isFlipped = selectedPair.some(selected => selected.id === item.id) || matchedPairs.includes(item.name);\n        const isMatched = matchedPairs.includes(item.name);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `puzzle-item ${isFlipped ? \"flipped\" : \"\"} ${isMatched ? \"matched\" : \"\"}`,\n          onClick: () => handleSelection(item),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"puzzle-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"puzzle-front\",\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"puzzle-back\",\n              children: item.type === \"image\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.src,\n                alt: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 44\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 85\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PuzzleMatch, \"4BnFi3zJ9Yd+2mi/T7BcRCVC+7w=\");\n_c = PuzzleMatch;\nexport default PuzzleMatch;\nvar _c;\n$RefreshReg$(_c, \"PuzzleMatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","id","src","name","type","PuzzleMatch","_s","shuffledImages","setShuffledImages","selectedPair","setSelectedPair","matchedPairs","setMatchedPairs","isChecking","setIsChecking","message","setMessage","shuffleImages","shuffled","sort","Math","random","handleSelection","item","length","includes","newSelection","setTimeout","item1","item2","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","isFlipped","some","selected","isMatched","onClick","alt","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/PuzzleMatch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../styles/PuzzleMatch.css\";\n\nconst images = [\n  { id: 1, src: \"/images/apple.png\", name: \"Apple\", type: \"image\" },\n  { id: 2, name: \"Apple\", type: \"text\" },\n  { id: 3, src: \"/images/banana.png\", name: \"Banana\", type: \"image\" },\n  { id: 4, name: \"Banana\", type: \"text\" },\n  { id: 5, src: \"/images/car.png\", name: \"Car\", type: \"image\" },\n  { id: 6, name: \"Car\", type: \"text\" },\n  { id: 7, src: \"/images/dog.png\", name: \"Dog\", type: \"image\" },\n  { id: 8, name: \"Dog\", type: \"text\" },\n];\n\nconst PuzzleMatch = () => {\n  const [shuffledImages, setShuffledImages] = useState([]);\n  const [selectedPair, setSelectedPair] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [isChecking, setIsChecking] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    shuffleImages();\n  }, []);\n\n  const shuffleImages = () => {\n    const shuffled = [...images].sort(() => Math.random() - 0.5);\n    setShuffledImages(shuffled);\n  };\n\n  const handleSelection = (item) => {\n    if (isChecking || selectedPair.length === 2 || matchedPairs.includes(item.name)) {\n      return;\n    }\n\n    const newSelection = [...selectedPair, item];\n    setSelectedPair(newSelection);\n\n    if (newSelection.length === 2) {\n      setIsChecking(true);\n\n      setTimeout(() => {\n        const [item1, item2] = newSelection;\n        if (item1.name === item2.name && item1.type !== item2.type) {\n          setMatchedPairs((prev) => [...prev, item1.name]);\n          setMessage(`✅ 1 match is correct: ${item1.name}!`);\n        }\n        setSelectedPair([]);\n        setIsChecking(false);\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"puzzle-container\">\n      <h1>Match the Pairs</h1>\n      <p>Find the matching image and name!</p>\n      <p className=\"match-message\">{message}</p>\n      <div className=\"puzzle-grid\">\n        {shuffledImages.map((item) => {\n          const isFlipped = selectedPair.some((selected) => selected.id === item.id) || matchedPairs.includes(item.name);\n          const isMatched = matchedPairs.includes(item.name);\n\n          return (\n            <div\n              key={item.id}\n              className={`puzzle-item ${isFlipped ? \"flipped\" : \"\"} ${isMatched ? \"matched\" : \"\"}`}\n              onClick={() => handleSelection(item)}\n            >\n              <div className=\"puzzle-inner\">\n                <div className=\"puzzle-front\">?</div>\n                <div className=\"puzzle-back\">\n                  {item.type === \"image\" ? <img src={item.src} alt={item.name} /> : <span>{item.name}</span>}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PuzzleMatch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}