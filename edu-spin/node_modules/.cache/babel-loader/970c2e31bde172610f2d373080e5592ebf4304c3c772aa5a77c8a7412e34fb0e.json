{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useNavigate } from \"react-router-dom\"; // âœ… Add redirection for missing users\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [spinKey, setSpinKey] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userDetails, setUserDetails] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const socketRef = useRef(null);\n  const navigate = useNavigate(); // âœ… Hook for redirection\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/students\");\n        const students = await response.json();\n        const storedEmail = localStorage.getItem(\"email\");\n        const user = students.find(student => student.email === storedEmail);\n        if (!user) {\n          console.error(\"User not logged in. Redirecting...\");\n          alert(\"You must log in first!\");\n          navigate(\"/login\");\n        } else {\n          setUserDetails(user);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch user details:\", error);\n      }\n    };\n    fetchUserDetails();\n    socketRef.current = io(\"http://localhost:5000\");\n    return () => socketRef.current.disconnect();\n  }, [navigate]);\n  const handleSpinResult = question => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null);\n    setFeedback(\"\");\n    setSpinKey(prevKey => prevKey + 1);\n  };\n  const handleAnswerClick = answer => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n      setScore(prevScore => {\n        const newScore = prevScore + 10;\n        submitScore(newScore); // âœ… Ensure correct score is submitted\n        return newScore;\n      });\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n\n  // âœ… Submit score only if user details exist\n  const submitScore = async newScore => {\n    if (!userDetails.email) {\n      console.error(\"User details missing, cannot submit score.\");\n      return;\n    }\n    const updatedUser = {\n      ...userDetails,\n      score: newScore\n    };\n    try {\n      await fetch(\"http://localhost:5000/update-score\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedUser)\n      });\n      console.log(\"Score updated successfully:\", updatedUser);\n    } catch (error) {\n      console.error(\"Error updating score:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Spin & Learn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score-display\",\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-wheel-container\",\n        children: /*#__PURE__*/_jsxDEV(SpinWheel, {\n          onSpin: handleSpinResult\n        }, spinKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: showQuestion && currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: userAnswer === option ? \"selected\" : \"\",\n              onClick: () => handleAnswerClick(option),\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`,\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"ToVTwLMEF8EzGONaKBS70e+KjjE=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","useNavigate","SpinWheel","jsxDEV","_jsxDEV","Game","_s","showQuestion","setShowQuestion","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","feedback","setFeedback","spinKey","setSpinKey","score","setScore","userDetails","setUserDetails","name","email","socketRef","navigate","fetchUserDetails","response","fetch","students","json","storedEmail","localStorage","getItem","user","find","student","console","error","alert","current","disconnect","handleSpinResult","question","prevKey","handleAnswerClick","answer","correctAnswer","prevScore","newScore","submitScore","updatedUser","method","headers","body","JSON","stringify","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSpin","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useNavigate } from \"react-router-dom\"; // âœ… Add redirection for missing users\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\n\nconst Game = () => {\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\"); \n  const [spinKey, setSpinKey] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userDetails, setUserDetails] = useState({ name: \"\", email: \"\" });\n\n  const socketRef = useRef(null);\n  const navigate = useNavigate(); // âœ… Hook for redirection\n\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/students\");\n        const students = await response.json();\n        const storedEmail = localStorage.getItem(\"email\");\n  \n        const user = students.find(student => student.email === storedEmail);\n        if (!user) {\n          console.error(\"User not logged in. Redirecting...\");\n          alert(\"You must log in first!\");\n          navigate(\"/login\");\n        } else {\n          setUserDetails(user);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch user details:\", error);\n      }\n    };\n  \n    fetchUserDetails();\n    \n    socketRef.current = io(\"http://localhost:5000\");\n    return () => socketRef.current.disconnect();\n  }, [navigate]);\n  \n  const handleSpinResult = (question) => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null); \n    setFeedback(\"\"); \n    setSpinKey((prevKey) => prevKey + 1);\n  };\n\n  const handleAnswerClick = (answer) => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n      setScore((prevScore) => {\n        const newScore = prevScore + 10;\n        submitScore(newScore); // âœ… Ensure correct score is submitted\n        return newScore;\n      });\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n  \n  // âœ… Submit score only if user details exist\n  const submitScore = async (newScore) => {\n    if (!userDetails.email) {\n      console.error(\"User details missing, cannot submit score.\");\n      return;\n    }\n  \n    const updatedUser = { ...userDetails, score: newScore };\n  \n    try {\n      await fetch(\"http://localhost:5000/update-score\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedUser),\n      });\n      console.log(\"Score updated successfully:\", updatedUser);\n    } catch (error) {\n      console.error(\"Error updating score:\", error);\n    }\n  };\n  \n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"game-title\">Spin & Learn</h1>\n      <p className=\"score-display\">Your Score: {score}</p>\n      <div className=\"game-content\">\n        <div className=\"spin-wheel-container\">\n          <SpinWheel key={spinKey} onSpin={handleSpinResult} />\n        </div>\n        <div className=\"question-container\">\n          {showQuestion && currentQuestion && (\n            <div className=\"question-box\">\n              <h2>{currentQuestion.question}</h2>\n              <ul>\n                {currentQuestion.options.map((option, index) => (\n                  <li\n                    key={index}\n                    className={userAnswer === option ? \"selected\" : \"\"}\n                    onClick={() => handleAnswerClick(option)}\n                  >\n                    {option}\n                  </li>\n                ))}\n              </ul>\n              <div className={`feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`}>\n                {feedback}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}