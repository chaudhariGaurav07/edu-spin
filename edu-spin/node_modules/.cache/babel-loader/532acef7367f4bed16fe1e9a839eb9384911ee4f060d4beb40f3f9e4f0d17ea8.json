{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/BadgesRewards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../styles/BadgesRewards.css\"; // Add styling for locked/unlocked badges\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst badgesData = [{\n  id: 1,\n  name: \"Beginner\",\n  scoreRequired: 100,\n  image: \"/imges/beginner.png\"\n}, {\n  id: 2,\n  name: \"Intermediate\",\n  scoreRequired: 300,\n  image: \"/badges/intermediate.png\"\n}, {\n  id: 3,\n  name: \"Advanced\",\n  scoreRequired: 500,\n  image: \"/badges/advanced.png\"\n}];\nconst BadgesRewards = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [unlockedBadges, setUnlockedBadges] = useState([]);\n  useEffect(() => {\n    const storedScore = localStorage.getItem(\"userScore\") || 0;\n    setScore(parseInt(storedScore));\n\n    // Check which badges are unlocked\n    const unlocked = badgesData.filter(badge => storedScore >= badge.scoreRequired);\n    setUnlockedBadges(unlocked.map(badge => badge.id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"badges-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF96\\uFE0F Badges & Rewards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badges-grid\",\n      children: badgesData.map(badge => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `badge ${unlockedBadges.includes(badge.id) ? \"unlocked\" : \"locked\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: badge.image,\n          alt: badge.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: badge.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), !unlockedBadges.includes(badge.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"lock-icon\",\n          children: \"\\uD83D\\uDD12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 52\n        }, this)]\n      }, badge.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(BadgesRewards, \"pIKWZgIut+ylal9Fapm3BBydegE=\");\n_c = BadgesRewards;\nexport default BadgesRewards;\nvar _c;\n$RefreshReg$(_c, \"BadgesRewards\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","badgesData","id","name","scoreRequired","image","BadgesRewards","_s","score","setScore","unlockedBadges","setUnlockedBadges","storedScore","localStorage","getItem","parseInt","unlocked","filter","badge","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","src","alt","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/BadgesRewards.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../styles/BadgesRewards.css\"; // Add styling for locked/unlocked badges\n\nconst badgesData = [\n  { id: 1, name: \"Beginner\", scoreRequired: 100, image: \"/imges/beginner.png\" },\n  { id: 2, name: \"Intermediate\", scoreRequired: 300, image: \"/badges/intermediate.png\" },\n  { id: 3, name: \"Advanced\", scoreRequired: 500, image: \"/badges/advanced.png\" },\n];\n\nconst BadgesRewards = () => {\n  const [score, setScore] = useState(0);\n  const [unlockedBadges, setUnlockedBadges] = useState([]);\n\n  useEffect(() => {\n    const storedScore = localStorage.getItem(\"userScore\") || 0;\n    setScore(parseInt(storedScore));\n\n    // Check which badges are unlocked\n    const unlocked = badgesData.filter((badge) => storedScore >= badge.scoreRequired);\n    setUnlockedBadges(unlocked.map((badge) => badge.id));\n  }, []);\n\n  return (\n    <div className=\"badges-container\">\n      <h2>üéñÔ∏è Badges & Rewards</h2>\n      <p>Your Score: {score}</p>\n      <div className=\"badges-grid\">\n        {badgesData.map((badge) => (\n          <div key={badge.id} className={`badge ${unlockedBadges.includes(badge.id) ? \"unlocked\" : \"locked\"}`}>\n            <img src={badge.image} alt={badge.name} />\n            <p>{badge.name}</p>\n            {!unlockedBadges.includes(badge.id) && <span className=\"lock-icon\">üîí</span>}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BadgesRewards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}