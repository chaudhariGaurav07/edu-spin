{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [spinKey, setSpinKey] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userDetails, setUserDetails] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const socketRef = useRef(null); // ðŸ”¹ Use ref for WebSocket\n\n  useEffect(() => {\n    // Retrieve stored user details from localStorage\n    const storedName = localStorage.getItem(\"name\");\n    const storedEmail = localStorage.getItem(\"email\");\n    if (storedName && storedEmail) {\n      setUserDetails({\n        name: storedName,\n        email: storedEmail\n      });\n    } else {\n      console.error(\"User not logged in. Score submission will fail.\");\n      alert(\"Please log in before playing!\"); // ðŸ”¹ Alert the user\n    }\n\n    // Initialize WebSocket only once\n    socketRef.current = io(\"http://localhost:5000\");\n    return () => {\n      socketRef.current.disconnect(); // Cleanup socket connection on unmount\n    };\n  }, []);\n  const handleSpinResult = question => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null);\n    setFeedback(\"\");\n    setSpinKey(prevKey => prevKey + 1); // Force re-render\n  };\n  const handleAnswerClick = answer => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n      setScore(prevScore => {\n        const newScore = prevScore + 10;\n        submitScore(newScore); // ðŸ”¹ Ensure correct score is submitted\n        return newScore;\n      });\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n\n  // Submit score to the server\n  const submitScore = newScore => {\n    const {\n      name,\n      email\n    } = userDetails;\n    if (!name || !email) {\n      console.error(\"User details missing, cannot submit score.\");\n      return;\n    }\n    const playerData = {\n      name,\n      email,\n      score: newScore\n    };\n    console.log(\"Submitting score:\", playerData);\n    socketRef.current.emit(\"submit-score\", playerData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Spin & Learn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score-display\",\n      children: [\"Your Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-wheel-container\",\n        children: /*#__PURE__*/_jsxDEV(SpinWheel, {\n          onSpin: handleSpinResult\n        }, spinKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: showQuestion && currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: userAnswer === option ? \"selected\" : \"\",\n              onClick: () => handleAnswerClick(option),\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`,\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"9mdazn6SZ8N3jQdOpHOEa7A9oTQ=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","SpinWheel","jsxDEV","_jsxDEV","Game","_s","showQuestion","setShowQuestion","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","feedback","setFeedback","spinKey","setSpinKey","score","setScore","userDetails","setUserDetails","name","email","socketRef","storedName","localStorage","getItem","storedEmail","console","error","alert","current","disconnect","handleSpinResult","question","prevKey","handleAnswerClick","answer","correctAnswer","prevScore","newScore","submitScore","playerData","log","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSpin","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\n\nconst Game = () => {\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\"); \n  const [spinKey, setSpinKey] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userDetails, setUserDetails] = useState({ name: \"\", email: \"\" });\n\n  const socketRef = useRef(null); // ðŸ”¹ Use ref for WebSocket\n\n  useEffect(() => {\n    // Retrieve stored user details from localStorage\n    const storedName = localStorage.getItem(\"name\");\n    const storedEmail = localStorage.getItem(\"email\");\n\n    if (storedName && storedEmail) {\n      setUserDetails({ name: storedName, email: storedEmail });\n    } else {\n      console.error(\"User not logged in. Score submission will fail.\");\n      alert(\"Please log in before playing!\"); // ðŸ”¹ Alert the user\n    }\n\n    // Initialize WebSocket only once\n    socketRef.current = io(\"http://localhost:5000\");\n\n    return () => {\n      socketRef.current.disconnect(); // Cleanup socket connection on unmount\n    };\n  }, []);\n\n  const handleSpinResult = (question) => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null); \n    setFeedback(\"\"); \n    setSpinKey((prevKey) => prevKey + 1); // Force re-render\n  };\n\n  const handleAnswerClick = (answer) => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n      setScore((prevScore) => {\n        const newScore = prevScore + 10;\n        submitScore(newScore); // ðŸ”¹ Ensure correct score is submitted\n        return newScore;\n      });\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n  \n  // Submit score to the server\n  const submitScore = (newScore) => {\n    const { name, email } = userDetails;\n  \n    if (!name || !email) {\n      console.error(\"User details missing, cannot submit score.\");\n      return;\n    }\n  \n    const playerData = { name, email, score: newScore };\n    console.log(\"Submitting score:\", playerData);\n    socketRef.current.emit(\"submit-score\", playerData);\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"game-title\">Spin & Learn</h1>\n      <p className=\"score-display\">Your Score: {score}</p>\n      <div className=\"game-content\">\n        <div className=\"spin-wheel-container\">\n          <SpinWheel key={spinKey} onSpin={handleSpinResult} />\n        </div>\n        <div className=\"question-container\">\n          {showQuestion && currentQuestion && (\n            <div className=\"question-box\">\n              <h2>{currentQuestion.question}</h2>\n              <ul>\n                {currentQuestion.options.map((option, index) => (\n                  <li\n                    key={index}\n                    className={userAnswer === option ? \"selected\" : \"\"}\n                    onClick={() => handleAnswerClick(option)}\n                  >\n                    {option}\n                  </li>\n                ))}\n              </ul>\n              <div className={`feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`}>\n                {feedback}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}