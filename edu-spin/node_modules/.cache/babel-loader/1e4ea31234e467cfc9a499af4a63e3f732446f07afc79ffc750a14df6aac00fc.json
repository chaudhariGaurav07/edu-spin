{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [spinKey, setSpinKey] = useState(0); // Key for forcing re-render\n\n  const handleSpinResult = question => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null);\n    setFeedback(\"\");\n    setSpinKey(prevKey => prevKey + 1); // Change key to force re-render\n  };\n  const handleAnswerClick = answer => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Spin & Learn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-wheel-container\",\n        children: [/*#__PURE__*/_jsxDEV(SpinWheel, {\n          onSpin: handleSpinResult\n        }, spinKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: showQuestion && currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: userAnswer === option ? \"selected\" : \"\",\n              onClick: () => handleAnswerClick(option),\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`,\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"JhQFQ+ElAKfdfxJfNJQ4Anm/Cu4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","SpinWheel","jsxDEV","_jsxDEV","Game","_s","showQuestion","setShowQuestion","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","feedback","setFeedback","spinKey","setSpinKey","handleSpinResult","question","prevKey","handleAnswerClick","answer","correctAnswer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSpin","options","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/home/gaurav/EduSpin-TLW/edu-spin/src/pages/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./../styles/Game.css\";\nimport SpinWheel from \"../components/SpinWheel\";\n\nconst Game = () => {\n  const [showQuestion, setShowQuestion] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [feedback, setFeedback] = useState(\"\"); \n  const [spinKey, setSpinKey] = useState(0); // Key for forcing re-render\n\n  const handleSpinResult = (question) => {\n    setCurrentQuestion(question);\n    setShowQuestion(true);\n    setUserAnswer(null); \n    setFeedback(\"\"); \n    setSpinKey((prevKey) => prevKey + 1); // Change key to force re-render\n  };\n\n  const handleAnswerClick = (answer) => {\n    setUserAnswer(answer);\n    if (answer === currentQuestion.correctAnswer) {\n      setFeedback(\"Correct! ðŸŽ‰\");\n    } else {\n      setFeedback(\"Wrong answer. Try again! ðŸ˜•\");\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1 className=\"game-title\">Spin & Learn</h1>\n      <div className=\"game-content\">\n        <div className=\"spin-wheel-container\">\n          <SpinWheel key={spinKey} onSpin={handleSpinResult} /> {/* Force re-render */}\n        </div>\n        <div className=\"question-container\">\n          {showQuestion && currentQuestion && (\n            <div className=\"question-box\">\n              <h2>{currentQuestion.question}</h2>\n              <ul>\n                {currentQuestion.options.map((option, index) => (\n                  <li\n                    key={index}\n                    className={userAnswer === option ? \"selected\" : \"\"}\n                    onClick={() => handleAnswerClick(option)}\n                  >\n                    {option}\n                  </li>\n                ))}\n              </ul>\n              <div className={`feedback ${feedback === \"Correct! ðŸŽ‰\" ? \"correct\" : \"wrong\"}`}>\n                {feedback}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAC7B,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3C,MAAMgB,gBAAgB,GAAIC,QAAQ,IAAK;IACrCR,kBAAkB,CAACQ,QAAQ,CAAC;IAC5BV,eAAe,CAAC,IAAI,CAAC;IACrBI,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAAC,EAAE,CAAC;IACfE,UAAU,CAAEG,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IACpCT,aAAa,CAACS,MAAM,CAAC;IACrB,IAAIA,MAAM,KAAKZ,eAAe,CAACa,aAAa,EAAE;MAC5CR,WAAW,CAAC,aAAa,CAAC;IAC5B,CAAC,MAAM;MACLA,WAAW,CAAC,6BAA6B,CAAC;IAC5C;EACF,CAAC;EAED,oBACEV,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpB,OAAA;MAAImB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CxB,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BpB,OAAA;QAAKmB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCpB,OAAA,CAACF,SAAS;UAAe2B,MAAM,EAAEZ;QAAiB,GAAlCF,OAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACNxB,OAAA;QAAKmB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCjB,YAAY,IAAIE,eAAe,iBAC9BL,OAAA;UAAKmB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BpB,OAAA;YAAAoB,QAAA,EAAKf,eAAe,CAACS;UAAQ;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnCxB,OAAA;YAAAoB,QAAA,EACGf,eAAe,CAACqB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzC7B,OAAA;cAEEmB,SAAS,EAAEZ,UAAU,KAAKqB,MAAM,GAAG,UAAU,GAAG,EAAG;cACnDE,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACY,MAAM,CAAE;cAAAR,QAAA,EAExCQ;YAAM,GAJFC,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKR,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLxB,OAAA;YAAKmB,SAAS,EAAE,YAAYV,QAAQ,KAAK,aAAa,GAAG,SAAS,GAAG,OAAO,EAAG;YAAAW,QAAA,EAC5EX;UAAQ;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvDID,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAyDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}